@page "/persona"
@page "/persona/{PersonaId:int}"
@using Models

@inject PersonasBLL personasBll



<EditForm Model="persona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Registro de Personas</h3>
        </div>
        <div class="card-body"></div>

        <form>
            @*PersonaId*@
            <div class="form-row align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>PersonaId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="persona.PersonaId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text"
                                    @onclick="Buscar">Buscar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*Nombres*@
            <div class="form-group">
                <label>Nombres</label>
                <InputText @bind-Value="persona.Nombres" class="form-control" />
                <ValidationMessage For="(() => persona.Nombres)" />
            </div>
            @*Telefono*@
            <div class="form-group">
                <label>Telefono</label>
                <InputText @bind-Value="persona.Telefono" class="form-control" />
                <ValidationMessage For="(() => persona.Telefono)" />
            </div>
            @*Celular*@
            <div class="form-group">
                <label>Celular</label>
                <InputText @bind-Value="persona.Celular" class="form-control" />
                <ValidationMessage For="(() => persona.Celular)" />
            </div>
            @*Email*@
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="persona.Email" class="form-control" />
                <ValidationMessage For="(() => persona.Email)" />
            </div>
            @*Direccion*@
            <div class="form-group">
                <label>Direccion</label>
                <InputText @bind-Value="persona.Direccion" class="form-control" />
                <ValidationMessage For="@(() => persona.Direccion)" />
            </div>
            @*Fecha de Nacimiento*@
            <div class="form-group">
                <label>Fecha de Nacimiento</label>
                <InputDate @bind-Value="persona.FechaDeNacimiento" class="form-control" />
                <ValidationMessage For="(() => persona.FechaDeNacimiento)" />
            </div>
            @*Ocupacion Id*@
            <div class="form-group">
                <label>OcupacionId  </label>
                <InputNumber @bind-Value="persona.OcupacionId" class="form-control" />
                <ValidationMessage For="(() => persona.OcupacionId)" />
            </div>
        </form>
    </div>
    <div class="card-footer">
        <div class="form-group text-center" display: inline-block>
            <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
            <button type="submit" class="btn btn-lg btn-success">Guardar</button>
            <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int PersonaId { get; set; }

    private Personas persona = new Personas();

    protected override void OnInitialized()
    {
        Nuevo();

        Buscar();
    }
    public void Nuevo()
    {
        persona = new Personas();
    }
    public void Buscar()
    {
        if (persona.PersonaId > 0)
        {
            var encontrado = personasBll.Buscar(persona.PersonaId);

            if (encontrado != null)
                this.persona = encontrado;
            else
            {
            }
        }
    }
    void Guardar()
    {
        bool guardo;

        persona.PersonaId = 1;
        guardo = personasBll.Guardar(persona);

        if (guardo)
        {
            Nuevo();
        }
        else
        {
        }
    }
    void Eliminar()
    {
        bool elimino;

        elimino = personasBll.Eliminar(persona);

        if (elimino)
        {
            Nuevo();
        }
        else
        {

        }
    }
}
